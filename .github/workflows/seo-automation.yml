name: SEO Automation

on:
  schedule:
    - cron: '0 2 * * *'  # TÃ¤glich um 02:00 UTC
    - cron: '0 2 * * 1'  # WÃ¶chentlich montags um 02:00 UTC
  workflow_dispatch:  # Manuell ausfÃ¼hrbar

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  daily-monitoring:
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 2 * * *'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run SEO Monitoring Suite
        run: node scripts/seo-monitoring-suite.cjs

      - name: Commit and push results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/seo-monitoring-suite.json || true

          if ! git diff --quiet && ! git diff --staged --quiet; then
            git commit -m "Update SEO monitoring results [automated]"
            # Atomischer Push mit Retry-Mechanismus
            for i in {1..3}; do
              if git push; then
                break
              else
                echo "Push attempt $i failed, retrying..."
                sleep 5
              fi
            done
          else
            echo "No changes to commit"
          fi

  weekly-analysis:
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 2 * * 1'
    needs: daily-monitoring
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run Content Analysis Suite
        run: node scripts/content-analysis-suite.cjs

      - name: Run AI Content Workflows
        run: node scripts/ai-content-workflows.cjs

      - name: Commit and push results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/content-analysis-suite.json || true
          git add data/ai-content-workflows.json || true

          if ! git diff --quiet && ! git diff --staged --quiet; then
            git commit -m "Update weekly SEO analysis results [automated]"
            # Atomischer Push mit Retry-Mechanismus
            for i in {1..3}; do
              if git push; then
                break
              else
                echo "Push attempt $i failed, retrying..."
                sleep 5
              fi
            done
          else
            echo "No changes to commit"
          fi

  ai-powered-optimization:
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 2 * * 1'
    needs: weekly-analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Analyze SEO Results and Implement Improvements
        run: |
          node scripts/ai-content-workflows.cjs --analyze-improvements --implement
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Check for implemented improvements
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "changes_made=false" >> $GITHUB_OUTPUT
            echo "No changes were made"
          else
            echo "changes_made=true" >> $GITHUB_OUTPUT
            echo "Changes detected, committing..."
          fi

      - name: Commit and push AI improvements
        if: steps.check-changes.outputs.changes_made == 'true'
        run: |
          git config --local user.email "ai@github.com"
          git config --local user.name "AI SEO Optimizer"
          git add .

          if ! git diff --quiet && ! git diff --staged --quiet; then
            git commit -m "ðŸ¤– AI-powered SEO improvements [automated] - Week ${{ github.run_number }}

            - Automated content optimizations
            - SEO enhancements based on current analysis
            - Performance optimizations
            - Schema markup improvements

            Generated by: GitHub Actions AI SEO Automation
            Week: ${{ github.run_number }}"

            # Atomischer Push mit Retry-Mechanismus
            for i in {1..3}; do
              if git push; then
                break
              else
                echo "Push attempt $i failed, retrying..."
                sleep 5
              fi
            done
          else
            echo "No changes to commit"
          fi

      - name: Deploy to production
        if: steps.check-changes.outputs.changes_made == 'true'
        run: |
          echo "ðŸš€ AI improvements deployed successfully!"
          # Hier kÃ¶nnte ein Deployment-Trigger hinzugefÃ¼gt werden

      - name: Notify about deployment
        if: steps.check-changes.outputs.changes_made == 'true'
        run: |
          echo "âœ… AI SEO improvements implemented and deployed"
          # Hier kÃ¶nnte eine Notification an Slack/Discord/Webhook gesendet werden

  notify-on-failure:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send notification
        run: |
          echo "SEO Automation failed. Check logs for details."
          # Hier kÃ¶nnte eine Slack/Discord/Webhook-Notification hinzugefÃ¼gt werden