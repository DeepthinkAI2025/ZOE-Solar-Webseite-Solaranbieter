name: SEO Automation (Optimized)

on:
  schedule:
    - cron: '0 2 * * *'  # Täglich um 02:00 UTC
    - cron: '0 2 * * 1'  # Wöchentlich montags um 02:00 UTC
  workflow_dispatch:  # Manuell ausführbar

permissions:
  contents: write
  actions: read
  pull-requests: write

jobs:
  # Parallelisierte Jobs für bessere Performance
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-hit }}
      should-run-weekly: ${{ steps.check.outputs.should-run-weekly }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Check if weekly job should run
        id: check
        run: |
          if [[ "${{ github.event.schedule }}" == "0 2 * * 1" ]] || [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should-run-weekly=true" >> $GITHUB_OUTPUT
          else
            echo "should-run-weekly=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache Node.js modules
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

  # Parallele Ausführung von SEO-Tasks
  daily-monitoring:
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 2 * * *'
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Restore Node.js cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run SEO Monitoring Suite
        run: node scripts/seo-monitoring-suite.cjs

      - name: Upload monitoring results
        uses: actions/upload-artifact@v4.3.6
        with:
          name: daily-monitoring-results
          path: data/seo-monitoring-suite.json
          retention-days: 7

  # Wöchentliche Analyse - parallel zur täglichen Überwachung
  weekly-analysis:
    if: needs.setup.outputs.should-run-weekly == 'true'
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Restore Node.js cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Run Content Analysis Suite
        run: node scripts/content-analysis-suite.cjs

      - name: Run AI Content Workflows
        run: node scripts/ai-content-workflows.cjs

      - name: Upload analysis results
        uses: actions/upload-artifact@v4.3.6
        with:
          name: weekly-analysis-results
          path: |
            data/content-analysis-suite.json
            data/ai-content-workflows.json
          retention-days: 30

  # AI-Optimierung - läuft nach Abschluss der anderen Jobs
  ai-powered-optimization:
    if: needs.setup.outputs.should-run-weekly == 'true'
    needs: [daily-monitoring, weekly-analysis]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Restore Node.js cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Download previous results
        uses: actions/download-artifact@v4
        with:
          pattern: "*-results"
          merge-multiple: true

      - name: Analyze SEO Results and Implement Improvements
        run: |
          node scripts/ai-content-workflows.cjs --analyze-improvements --implement
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Check for implemented improvements
        id: check-changes
        run: |
          if git diff --quiet; then
            echo "changes_made=false" >> $GITHUB_OUTPUT
            echo "No changes were made"
          else
            echo "changes_made=true" >> $GITHUB_OUTPUT
            echo "Changes detected, committing..."
          fi

      - name: Commit and push AI improvements
        if: steps.check-changes.outputs.changes_made == 'true'
        run: |
          git config --local user.email "ai@github.com"
          git config --local user.name "AI SEO Optimizer"
          git add .

          if ! git diff --quiet && ! git diff --staged --quiet; then
            git commit -m "🤖 AI-powered SEO improvements [automated] - Week ${{ github.run_number }}

            - Automated content optimizations
            - SEO enhancements based on current analysis
            - Performance optimizations
            - Schema markup improvements

            Generated by: GitHub Actions AI SEO Automation
            Week: ${{ github.run_number }}"

            # Atomischer Push mit Retry-Mechanismus
            for i in {1..3}; do
              if git push; then
                break
              else
                echo "Push attempt $i failed, retrying..."
                sleep 5
              fi
            done
          else
            echo "No changes to commit"
          fi

  # Zusammenfassender Report
  generate-report:
    needs: [daily-monitoring, weekly-analysis, ai-powered-optimization]
    if: always() && (needs.daily-monitoring.result == 'success' || needs.weekly-analysis.result == 'success')
    runs-on: ubuntu-latest

    steps:
      - name: Create SEO Automation Report
        run: |
          echo "## SEO Automation Report - $(date +'%Y-%m-%d')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Daily Monitoring**: ${{ needs.daily-monitoring.result == 'success' && '✅ Completed' || needs.daily-monitoring.result == 'failure' && '❌ Failed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Weekly Analysis**: ${{ needs.weekly-analysis.result == 'success' && '✅ Completed' || needs.weekly-analysis.result == 'failure' && '❌ Failed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **AI Optimization**: ${{ needs.ai-powered-optimization.result == 'success' && '✅ Completed' || needs.ai-powered-optimization.result == 'failure' && '❌ Failed' || '⏭️ Skipped' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Performance Metrics" >> $GITHUB_STEP_SUMMARY
          echo "- **Total Execution Time**: $(date -u '+%H:%M:%S')" >> $GITHUB_STEP_SUMMARY
          echo "- **Jobs Completed**: $((${{ needs.daily-monitoring.result == 'success' }} + ${{ needs.weekly-analysis.result == 'success' }} + ${{ needs.ai-powered-optimization.result == 'success' }}))/3" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Scheduled Run" >> $GITHUB_STEP_SUMMARY
          echo "- **Daily**: Tomorrow at 02:00 UTC" >> $GITHUB_STEP_SUMMARY
          echo "- **Weekly**: Next Monday at 02:00 UTC" >> $GITHUB_STEP_SUMMARY

  notify-on-failure:
    if: failure()
    needs: [daily-monitoring, weekly-analysis, ai-powered-optimization]
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification
        run: |
          echo "🚨 SEO Automation failed"
          echo "Failed jobs:"
          echo "- Daily Monitoring: ${{ needs.daily-monitoring.result }}"
          echo "- Weekly Analysis: ${{ needs.weekly-analysis.result }}"
          echo "- AI Optimization: ${{ needs.ai-powered-optimization.result }}"
          echo "Check workflow logs for details."